{"version":3,"sources":["../../src/pages/observation-list/observation-list.module.ts","../../src/pages/observation-list/observation-list.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ObservationListPage } from './observation-list';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpModule,Http } from '@angular/http';\n\nexport function createTranslateLoader(http: Http) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    ObservationListPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ObservationListPage),\n    TranslateModule.forChild({\n      loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [Http]\n              }\n    })\n  ],\n})\nexport class ObservationListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/observation-list/observation-list.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController, LoadingController } from 'ionic-angular';\nimport { NativeStorage } from '@ionic-native/native-storage';\nimport { Events } from 'ionic-angular';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\nimport { Network } from '@ionic-native/network';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {PhenoApi} from '../../providers/pheno-api/pheno-api';\nimport { Alert } from 'ionic-angular/components/alert/alert';\n\n/**\n * Generated class for the ObservationListPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-observation-list',\n  templateUrl: 'observation-list.html',\n})\nexport class ObservationListPage {\n\n  private filter:any;\n  private limit:any;\n  private school: any;\n  private userfilter:any;\n  private observations:any;\n  private loadMore:any;\n  private loading:any;\n  private user:any=null;\n  private notifications:any=0;\n  private refresher:any;\n  private networkStatus:number;\n  private order:any='bydate'; //bydate by default\n  private bydate:any=true;\n  private bylikes:any=false;\n  private byvalidations:any=false;\n  private bycomments:any=false;\n  private offlineObservations=0;\n  private uploadPath:any='http://web.phenologit.org/uploads/';\n\n  private st_order_by:any;\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public phenoApi: PhenoApi,\n    public alertCtrl: AlertController,\n    public nativeStorage: NativeStorage,\n    public loadingCtrl:LoadingController,\n    public events:Events,\n    public sqlite:SQLite,\n    public network:Network,\n    private translate: TranslateService\n\n  \n  \n  ) {\n\n      //showing alert when observation is created\n      let created = navParams.get('created');\n      if(created==true){\n        this.presentAlert('Observation Created!','Your observation was created successfully!');\n      }\n\n      //get logged user details\n      this.getUserFromStorage();\n\n      //check notifications for user\n      this.checkNotifications();\n\n      //listen for user disconnection event\n      events.subscribe('network:disconnected', (e) => {\n        this.networkStatus=0;\n      });\n\n      //listen for user logout event\n      events.subscribe('offline:observations', (e) => {\n        this.checkForOfflineObservations();\n      });\n\n      //listen for user disconnection event\n      events.subscribe('network:connected', (e) => {\n        this.networkStatus=1;\n        this.checkForOfflineObservations();\n        if(this.navCtrl.getActive().name === 'ObservationListPage') this.getObservations(this.filter,this.limit,this.school,this.userfilter);\n        \n      });\n\n      this.checkNetwork();\n\n      this.getTranslatedStrings();\n\n  }\n  \n\n  //check current network status and subscribe to events\n  checkNetwork(){\n    if (this.network.type === 'none') {\n      console.log('we have no connection!');\n      this.networkStatus=0;\n    }else{\n      this.networkStatus=1;\n      //if online check for pending observations\n      this.checkForOfflineObservations();\n    }\n  }\n\n  getTranslatedStrings(){\n      //get translated strings\n      this.translate.get('ORDER').subscribe(\n        value => {this.st_order_by= value}\n      )\n  }\n\n\n  //check if there are any pending observations stored in the device\n  checkForOfflineObservations(){\n    console.log(\"checking offline observations...\")\n    if(this.networkStatus==1){\n      this.sqlite.create({\n        name: 'phenologit.db',\n        location: 'default'\n      })\n      .then((db: SQLiteObject) => {\n        db.executeSql('SELECT * FROM observations_offline', {})\n        .then((data) => {\n          this.offlineObservations=data.rows.length;\n          console.log(this.offlineObservations)\n        })\n        .catch(e => console.log(e));\n      });\n    }else{\n      console.log('no network')\n    }\n  }\n\n  checkNotifications(){\n    //listening for notification count event\n    this.events.subscribe('notificationsCount',(count) => { \n      this.notifications=count;\n    });\n  }\n\n  getUserFromStorage(){\n    //console.log(\"getting user from storage\");\n    this.nativeStorage.getItem('user')\n    .then(\n      data => {\n        this.user=data;\n        console.log('user stored-> '+JSON.stringify(data));\n        this.translate.setDefaultLang(data.lang);\n      },\n      error => {\n        console.error(error),\n        this.translate.setDefaultLang('en');\n      }\n    );\n  }\n\n  presentLoading(text) {\n    //present loading function\n    this.loading = this.loadingCtrl.create({\n      content: text\n    });\n    this.loading.present();\n  }\n\n  presentAlert(msg,subTitle) {\n    //present alert function\n    let alert = this.alertCtrl.create({\n      title: msg,\n      subTitle: subTitle,\n      buttons: ['Ok']\n    });\n    alert.present();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ObservationListPage');\n\n    this.checkNetwork();\n\n    //parameters by default\n    this.filter=null;\n    this.school=null;\n    this.userfilter=null;\n\n    //load this.limit observations each time\n    this.limit=10;\n    this.loadMore=1;\n\n    //if specie is sent, filter by specie overriding default parameters\n    if(this.navParams.get('filter')!==undefined){\n      this.filter=this.navParams.get('filter');\n      console.log(\"filter by: \"+this.filter);\n    }\n\n    //if school is sent, filter by school overriding default parameters\n    if(this.navParams.get('school')!==undefined){\n      this.school=this.navParams.get('school');\n      console.log(\"filter by: \"+this.school);\n    }\n\n    //general getobservation\n    this.getObservations(this.filter,this.limit,this.school,this.userfilter);\n  }\n\n  doRefresh(refresher){\n    //refresh on swipe down\n    this.refresher=refresher;\n    this.getObservations(this.filter,this.limit,this.school,this.userfilter);\n  }\n\n  \n  getObservations(filter,limit,school,userfilter){\n    //get data from API\n\n    //show loading while doing the operation\n    this.presentLoading('loading...');\n\n    //query the api\n    this.phenoApi.getObservations(filter,limit,school,userfilter).subscribe(\n      data => {\n        this.observations=data\n      },\n      err => {\n        this.loading.dismiss(),\n        console.error(err),\n        this.refresher.complete();\n        this.presentAlert('Error!','Error getting observations')\n      },\n      () => {\n        console.log(this.observations)\n        //remove loading\n        this.loading.dismiss();\n        //allow to load more now\n        this.loadMore=1;\n\n        //if refresher exists then mark it as completed\n        if (this.refresher != undefined) { \n          this.refresher.complete();\n        }\n      }\n    );\n  } \n\n  //open observation on tap\n  openOfflineObservationsPage(){\n    this.navCtrl.push('OfflineObservationsPage');\n  }\n\n  //open observation on tap\n  openObservation(id){\n    this.navCtrl.push('ObservationPage',{id:id});\n  }\n\n  //add new observation\n  addObservation(){\n    this.navCtrl.push('AddObservationPage');\n  }\n  \n  //infinite scrolling\n  doInfinite(infiniteScroll){\n    //load 5 more observation \n    this.limit+=5;\n    //avoid loadin more until the operation is completed\n    this.loadMore=0;\n \n    //timeout for avoiding problems\n    setTimeout(() => {\n      //query api for data\n      this.getObservations(this.filter,this.limit,this.school,this.userfilter);\n      //mark scroll as complete\n      infiniteScroll.complete();\n    }, 500);\n  \n  }\n\n  //show orders alert\n  showOrders(event){\n    let alert = this.alertCtrl.create({\n      title: this.st_order_by,\n      inputs:\n      [\n\n          {\n            label:'By date',\n            type:'radio',\n            value:'bydate',\n            checked:this.bydate\n          },\n          {\n            label:'By likes',\n            value:'bylikes',\n            type:'radio',\n            checked:this.bylikes\n          },\n          {\n            label:'By validations',\n            value:'byvalidations',\n            type:'radio',\n            checked:this.byvalidations\n          }\n        ],\n      buttons: [\n      {\n        text: 'Order',\n        handler: data => {\n          this.orderBy(data);\n          console.log(data);\n\n        }\n      }\n      ]\n    });\n    alert.present();\n  }\n\n  //filter by validated\n  showFilters(event){\n    let alert = this.alertCtrl.create({\n      title: 'Filters',\n      inputs:\n      [\n \n          {\n            label:'Show only validated observations',\n            type:'checkbox',\n            value:'onlyvalidated',\n          }\n        ],\n      buttons: [\n      {\n        text: 'Filter',\n        handler: data => {\n          //this.orderBy(data);\n          console.log(data);\n\n        }\n      }\n      ]\n    });\n    alert.present();\n  }\n\n  orderBy(option){\n    switch (option) {\n      case 'bylikes':\n        console.log('Ordering by likes')\n        this.getObservationsByLikes(this.filter,this.limit);\n        break;\n      case 'byvalidations':\n        console.log('ordering by validations');\n        this.getObservationsByValidations(this.filter,this.limit);\n        break;\n      case 'bydate':\n        console.log('ordering by date');\n        this.getObservations(this.filter,this.limit,this.school,this.userfilter);\n        break;\n    }\n  }\n\n    //get data from API\n    getObservationsByLikes(filter,limit){\n      this.order='bylikes';\n      this.bydate=false;\n      this.bylikes=true;\n      this.byvalidations=false;\n      this.bycomments=false;\n  \n      this.observations=this.phenoApi.getObservationsByLikes(filter,limit).subscribe(\n          data => {this.observations=data},\n          err => console.log(err),\n        );\n    }\n  \n    //get data from API\n    getObservationsByValidations(filter,limit){\n      this.order='byvalidations';\n      this.bydate=false;\n      this.bylikes=false;\n      this.byvalidations=true;\n      this.bycomments=false;\n  \n      this.observations=this.phenoApi.getObservationsByValidations(filter,limit).subscribe(\n          data => {this.observations=data},\n          err => console.log(err),\n      );\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/observation-list/observation-list.ts"],"sourceRoot":""}