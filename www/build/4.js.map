{"version":3,"sources":["../../src/pages/offline-observations/offline-observations.module.ts","../../src/pages/offline-observations/offline-observations.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACiB;AAUjE,IAAa,6BAA6B;IAA1C;IAA4C,CAAC;IAAD,oCAAC;AAAD,CAAC;AAAhC,6BAA6B;IARzC,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,sFAAuB;SACxB;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,sFAAuB,CAAC;SAClD;KACF,CAAC;GACW,6BAA6B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACZQ;AAC8D;AACpD;AACsC;AACxD;AAEmB;AAE7D;;;;;GAKG;AAOH,IAAa,uBAAuB;IAMlC,iCACS,OAAsB,EACtB,SAAoB,EACpB,MAAc,EACd,IAAU,EACV,SAA0B,EACzB,QAAsB,EACtB,MAAc,EACd,WAA8B,EAC9B,QAAkB,EAClB,MAAc;QATf,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAM;QACV,cAAS,GAAT,SAAS,CAAiB;QACzB,aAAQ,GAAR,QAAQ,CAAc;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAmB;QAC9B,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QAbhB,wBAAmB,GAAK,EAAE,CAAC;IAenC,CAAC;IAED,iDAAe,GAAf;QACE,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;QACtD,gCAAgC;IAClC,CAAC;IAED,kDAAgB,GAAhB;QACE,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,kEAAkE;IAClE,wDAAsB,GAAtB;QAAA,iBA6CD;QA3CG,EAAE,EAAC,IAAI,CAAC,EAAC;YACP,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjB,IAAI,EAAE,eAAe;gBACrB,QAAQ,EAAE,SAAS;aACpB,CAAC;iBACD,IAAI,CAAC,UAAC,EAAgB;gBACrB,EAAE,CAAC,UAAU,CAAC,oCAAoC,EAAE,EAAE,CAAC;qBACtD,IAAI,CAAC,UAAC,IAAI;;wBAGH,WAAW,GAAC,EAAE,CAAC;wBACnB,IAAI,gBAAgB,GAAC,EAAE;wBAEvB,EAAE,CAAC,UAAU,CAAC,+DAA+D,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAC,GAAG,EAAE,EAAE,CAAC;6BAC1G,IAAI,CAAC,UAAC,KAAK;4BAEV,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC1C,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BAE3C,CAAC;wBACH,CAAC,CAAC,CAAC;wBACH,WAAW,GAAC;4BACV,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;4BACvB,KAAK,EAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;4BAC7B,WAAW,EAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW;4BACzC,MAAM,EAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ;4BACjC,KAAK,EAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;4BAC/B,KAAK,EAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;4BAC7B,MAAM,EAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAC,GAAG,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;4BACtD,MAAM,EAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;4BAC/B,WAAW,EAAC,CAAC;4BACb,QAAQ,EAAC,CAAC;4BACV,YAAY,EAAC,MAAM;4BACnB,YAAY,EAAC,gBAAgB;4BAC7B,KAAK,EAAC,EAAE;yBACT;wBACD,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC7C,CAAC;wBA3BK,WAAW;oBADjB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;;qBA4BvC;oBACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,mBAAmB,CAAC,CAAC;gBACxC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QAEP,CAAC;IACH,CAAC;IAEC,0DAAwB,GAAxB,UAAyB,EAAE;QAA3B,iBA6CC;QA3CC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAE5C,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE,0BAA0B;YACjC,OAAO,EAAE,iDAAiD;YAC1D,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAClC,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE;wBACP,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC;4BACjB,IAAI,EAAE,eAAe;4BACrB,QAAQ,EAAE,SAAS;yBACpB,CAAC;6BACD,IAAI,CAAC,UAAC,EAAgB;4BACrB,EAAE,CAAC,UAAU,CAAC,6CAA6C,GAAC,EAAE,GAAC,GAAG,EAAE,EAAE,CAAC;iCACtE,IAAI,CAAC,UAAC,IAAI;gCACT,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;4BAC1B,CAAC,CAAC,CAAC;4BACH,EAAE,CAAC,UAAU,CAAC,8DAA8D,GAAC,EAAE,GAAC,GAAG,EAAE,EAAE,CAAC;iCACvF,IAAI,CAAC,UAAC,IAAI;gCACT,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;4BAC1B,CAAC,CAAC,CAAC;4BAEH,6BAA6B;4BAC7B,KAAI,CAAC,mBAAmB,GAAC,EAAE,CAAC;4BAC5B,eAAe;4BACf,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;4BAE5C,KAAI,CAAC,sBAAsB,EAAE,CAAC;wBAChC,CAAC,CAAC,CAAC;oBACL,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,EAAE,CAAC;IAEpB,CAAC;IAED,mDAAiB,GAAjB,UAAkB,EAAE;QAClB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,6CAAW,GAAX,UAAY,GAAG;QACb,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAChC,OAAO,EAAE,GAAG;YACZ,OAAO,EAAE,MAAM;SAChB,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAED,6CAAW,GAAX,UAAY,EAAE;QACZ,qCAAqC;QADvC,iBA8DC;QA3DC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAE9B,oCAAoC;QACpC,IAAI,WAAW,CAAC;QAChB,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAG,CAAC;YACnE,EAAE,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAG,CAAC,CAAC,CAAC;gBACzC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBAC1C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,KAAK,CAAC;YACV,CAAC;QACL,CAAC;QAED,IAAM,YAAY,GAAuB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAChE,IAAI,IAAI,GAAC,IAAI,CAAC;QAEd,IAAI,KAAK,GAAC,CAAC,CAAC;QAEZ,GAAG,EAAc,UAAwB,EAAxB,gBAAW,CAAC,YAAY,EAAxB,cAAwB,EAAxB,IAAwB;YAArC,IAAI,KAAK;YAEX,IAAI,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC;YAC9B,IAAI,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC;YAChC,IAAI,OAAO,GAAG,EAAC,QAAQ,EAAC,MAAM,EAAC,CAAC;YAChC,IAAI,MAAM,GAAG,EAAC,QAAQ,EAAC,MAAM,EAAC,CAAC;YAE/B,IAAI,UAAU,GAAsB;gBAClC,OAAO,EAAE,MAAM;gBACf,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;gBACpD,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAG,YAAY;gBACvB,MAAM,EAAC,MAAM;aACf;YAED,IAAI,GAAG,GAAG,SAAS,CAAC,2CAA2C,CAAC,CAAC;YAEjE,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,UAAU,CAAC;iBAC3C,IAAI,CAAC,UAAC,IAAI;gBACT,OAAO,CAAC,GAAG,CAAC,YAAY,GAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC;gBACpE,KAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;gBAClB,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,YAAY,GAAC,GAAG,GAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;gBACxL,KAAK,EAAG,CAAC;gBAET,EAAE,EAAC,KAAK,IAAE,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,EAAC;oBACzC,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;oBACzB,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAC,KAAK,CAAC,CAAC;gBAC9C,CAAC;YAEH,CAAC,EAAE,UAAC,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC;YAEF,IAAI,UAAU,GAAI,UAAC,aAA4B;gBAC7C,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACd,KAAI,CAAC,EAAE,CAAC,UAAU,CAAC,qBAAqB,GAAC,IAAI,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,MAAM,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,GAAC,IAAI,CAAC,CAAC;gBAChH,CAAC,CAAC,CAAC;YACL,CAAC;YAED,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAErC;IACH,CAAC;IAED,0CAA0C;IAC1C,wCAAM,GAAN,UAAO,WAAW;QAAlB,iBAiCC;QA/BC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;QAEzC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,SAAS,CAClD,cAAI,IAAK,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAC,EAC3C,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAhC,CAAgC,EACvC;YACE,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;YAEjD,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjB,IAAI,EAAE,eAAe;gBACrB,QAAQ,EAAE,SAAS;aACpB,CAAC;iBACD,IAAI,CAAC,UAAC,EAAgB;gBACrB,EAAE,CAAC,UAAU,CAAC,6CAA6C,GAAC,WAAW,CAAC,EAAE,GAAC,GAAG,EAAE,EAAE,CAAC;qBAClF,IAAI,CAAC,UAAC,IAAI;oBACT,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;oBACpC,KAAI,CAAC,mBAAmB,GAAC,EAAE,CAAC;oBAC5B,KAAI,CAAC,sBAAsB,EAAE,CAAC;gBAChC,CAAC,CAAC,CAAC;gBACH,EAAE,CAAC,UAAU,CAAC,8DAA8D,GAAC,WAAW,CAAC,EAAE,GAAC,GAAG,EAAE,EAAE,CAAC;qBAC/F,IAAI,CAAC,UAAC,IAAI;oBACT,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;oBAC1C,KAAI,CAAC,mBAAmB,GAAC,EAAE,CAAC;oBAC5B,KAAI,CAAC,sBAAsB,EAAE,CAAC;gBAChC,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,qBAAqB,EAAC,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC,CAAC;QAC7D,CAAC,CACF,CAAC;IAEJ,CAAC;IAEH,8BAAC;AAAD,CAAC;AA7OY,uBAAuB;IALnC,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;OACG;KACzC,CAAC;yEAQ+B;QACX,qEAAS;QACZ,iEAAM;QACR,sEAAI;QACC,kFAAe;QACf,8DAAY;QACd,wEAAM;QACD,iFAAiB;QACpB,+DAAQ;QACV,MAAM;AA6NzB;SA7OY,uBAAuB,gB","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { OfflineObservationsPage } from './offline-observations';\n\n@NgModule({\n  declarations: [\n    OfflineObservationsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(OfflineObservationsPage),\n  ],\n})\nexport class OfflineObservationsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/offline-observations/offline-observations.module.ts","import { Component, NgZone } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController, LoadingController, Events } from 'ionic-angular';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer';\nimport { File } from '@ionic-native/file';\n\nimport {PhenoApi} from '../../providers/pheno-api/pheno-api';\n\n/**\n * Generated class for the OfflineObservationsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-offline-observations',\n  templateUrl: 'offline-observations.html',\n})\nexport class OfflineObservationsPage {\n\n  private networkStatus:any;\n  private offlineObservations:any=[];\n  private ld;\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public sqlite: SQLite,\n    public file: File,\n    public alertCtrl: AlertController,\n    private transfer: FileTransfer,\n    private ngZone: NgZone,\n    private loadingCtrl: LoadingController,\n    private phenoApi: PhenoApi,\n    private events: Events\n  ) {\n  }\n\n  ionViewDidEnter() {\n    console.log('ionViewDidLoad OfflineObservationsPage');\n    //this.getOfflineObservations();\n  }\n\n  ionViewWillEnter(){\n    this.getOfflineObservations();\n  }\n\n  //check if there are any pending observations stored in the device\n  getOfflineObservations(){\n\n    if(true){\n      this.sqlite.create({\n        name: 'phenologit.db',\n        location: 'default'\n      })\n      .then((db: SQLiteObject) => {\n        db.executeSql('SELECT * FROM observations_offline', {})\n        .then((data) => {\n          \n          for(var i = 0; i < data.rows.length; i++) {\n            var observation={};\n            let observationMedia=[]\n            \n            db.executeSql('SELECT * FROM observations_offline_media WHERE idobservation='+data.rows.item(i).id+' ', {})\n            .then((media) => {\n              \n              for(let y = 0; y < media.rows.length; y++) {\n                observationMedia.push(media.rows.item(y))\n                \n              }\n            });\n            observation={\n              id:data.rows.item(i).id,\n              title:data.rows.item(i).title,\n              description:data.rows.item(i).description,\n              specie:data.rows.item(i).idspecie,\n              stage:data.rows.item(i).idstage,\n              cover:data.rows.item(i).cover,\n              coords:data.rows.item(i).lat+','+data.rows.item(i).lng,\n              userid:data.rows.item(i).iduser,\n              temperature:0,\n              humidity:0,\n              weatherstate:'null',\n              media2upload:observationMedia,\n              media:[]\n            }\n            this.offlineObservations.push(observation);\n          }\n          console.log(this.offlineObservations);\n        })\n      });\n      \n  }\n}\n\n  removeOfflineObservation(id){\n\n    console.log(\"removing offline observation\");\n\n    let confirm = this.alertCtrl.create({\n      title: 'Remove this observation?',\n      message: 'Do you want to remove this pending observation?',\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: () => {\n            console.log('Disagree clicked');\n          }\n        },\n        {\n          text: 'Remove',\n          handler: () => {\n            this.sqlite.create({\n              name: 'phenologit.db',\n              location: 'default'\n            })\n            .then((db: SQLiteObject) => {\n              db.executeSql('DELETE FROM observations_offline WHERE id=\"'+id+'\"', {})\n              .then((data) => {\n                console.log(\"deleted!\");\n              });\n              db.executeSql('DELETE FROM observations_offline_media WHERE idobservation=\"'+id+'\"', {})\n              .then((data) => {\n                console.log(\"deleted!\");\n              });\n              \n              //reload offline observations\n              this.offlineObservations=[];\n              //publish event\n              this.events.publish('offline:observations');\n              \n              this.getOfflineObservations();\n            });\n          }\n        }\n      ]\n    });\n\n    confirm.present();\n    \n  }\n\n  uploadObservation(id){\n    this.uploadFiles(id);\n  }\n\n  showLoading(msg){\n    this.ld = this.loadingCtrl.create({\n      content: msg,\n      spinner: 'dots'\n    });\n  \n    this.ld.present();\n  }\n\n  uploadFiles(id) {\n    //uploads file/s and resize in server\n\n    this.showLoading('uploading');\n\n    //seach in the array for observation\n    var observation;\n    for( var i = 0, len = this.offlineObservations.length; i < len; i++ ) {\n        if( this.offlineObservations[i].id === id ) {\n            observation = this.offlineObservations[i];\n            console.log(observation);\n            break;\n        }\n    }   \n\n    const fileTransfer: FileTransferObject = this.transfer.create();\n    var self=this;\n\n    var count=0;\n  \n    for(var image of observation.media2upload){\n\n      var fileURL = image.media_url;\n      var prefix = image.media_prefix;\n      var headers = {'prefix':prefix};\n      var params = {'prefix':prefix};\n  \n      let up_options: FileUploadOptions = {\n        fileKey: 'bill',\n        fileName: fileURL.substr(fileURL.lastIndexOf('/')+1),\n        headers: headers,\n        mimeType : \"text/plain\",\n        params:params\n     }\n  \n     var uri = encodeURI(\"http://web.phenologit.org/uploadMedia.php\");\n   \n     fileTransfer.upload(fileURL, uri, up_options)\n      .then((data) => {\n        console.log(\"uploaded: \"+observation.media2upload[count].media_url);\n        this.ld.dismiss();\n        observation.media.push(observation.media2upload[count].media_prefix+'_'+observation.media2upload[count].media_url.substr(observation.media2upload[count].media_url.lastIndexOf('/')+1));\n        count ++;\n\n        if(count==observation.media2upload.length){ //save it to database when all the images are uploaded\n          this.saveDB(observation);\n          console.log('subo to api en count: '+count);\n        }\n        \n      }, (err) => {\n        console.log(err);\n      })\n\n      let onProgress =  (progressEvent: ProgressEvent) : void => {\n        this.ngZone.run(() => {\n          this.ld.setContent('uploading picture: '+Math.round((progressEvent.loaded / progressEvent.total) * 100)+' %');\n        });\n      }\n      \n      fileTransfer.onProgress(onProgress);\n\n    }\n  } \n\n  //saves to api and return to the main page\n  saveDB(observation){\n\n    console.log(JSON.stringify(observation));\n\n    this.phenoApi.postObservation(observation).subscribe(\n      data => {console.log(JSON.stringify(data))},\n      err => console.log(JSON.stringify(err)),\n      () => {\n        console.log('observation created successfully!');\n      \n        this.sqlite.create({\n          name: 'phenologit.db',\n          location: 'default'\n        })\n        .then((db: SQLiteObject) => {\n          db.executeSql('DELETE FROM observations_offline WHERE id=\"'+observation.id+'\"', {})\n          .then((data) => {\n            console.log(\"observation deleted!\");\n            this.offlineObservations=[];\n            this.getOfflineObservations();\n          });\n          db.executeSql('DELETE FROM observations_offline_media WHERE idobservation=\"'+observation.id+'\"', {})\n              .then((data) => {\n                console.log(\"observation media deleted!\");\n                this.offlineObservations=[];\n                this.getOfflineObservations();\n              });\n        });\n\n        this.navCtrl.setRoot('ObservationListPage',{created:true});\n      }\n    );\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/offline-observations/offline-observations.ts"],"sourceRoot":""}